[build-system]
requires = ["scikit-build-core-conan>=0.5.3"]
build-backend = "scikit_build_core_conan.build"

[project]
name = "endstone"
authors = [
    { name = "Vincent Wu", email = "magicdroidx@gmail.com" }
]
description = "Endstone offers a plugin API for Bedrock Dedicated Servers, supporting both Python and C++."
readme = "README.md"
requires-python = ">=3.9"
keywords = ["plugin", "python", "minecraft", "bedrock"]
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
]
dependencies = [
    "click",
    "endstone-bstats",
    "importlib-metadata",
    "importlib-resources",
    "numpy",
    "packaging",
    "pkginfo",
    "psutil",
    "requests",
    "rich",
    "tomlkit",
]
dynamic = ["version"]

[project.optional-dependencies]
test = ["pytest"]

[project.urls]
Changelog = "https://endstone.readthedocs.io/en/latest/changelog"
Discussions = "https://github.com/orgs/EndstoneMC/discussions"
Documentation = "https://endstone.readthedocs.io"
Homepage = "https://github.com/EndstoneMC/endstone"
Issues = "https://github.com/EndstoneMC/endstone/issues"

[project.scripts]
endstone = "endstone._internal.bootstrap:cli"

[tool.scikit-build]
cmake.args = ["-G Ninja"]
cmake.build-type = "RelWithDebInfo"
cmake.define = { BUILD_TESTING = "OFF" }
wheel.packages = ["python/src/endstone"]
wheel.license-files = ["LICENSE"]
install.components = ["endstone_wheel"]
install.strip = false
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
sdist.include = ["python/src/endstone/_internal/version.py"]

[tool.scikit-build-core-conan]
config = ["tools.cmake.cmaketoolchain:generator=Ninja"]

# [[tool.scikit-build-core-conan.local-recipes]]
# path = "third_party/funchook"
# version = "1.1.3"

[[tool.scikit-build-core-conan.overrides]]
if.platform-system = "win32"
settings = ["compiler.cppstd=17"]

[[tool.scikit-build-core-conan.overrides]]
if.platform-system = "linux"
settings = ["compiler.cppstd=gnu17", "compiler.libcxx=libc++"]

[tool.setuptools_scm]
write_to = "python/src/endstone/_internal/version.py"
version_scheme = "guess-next-dev"
local_scheme = "no-local-version"

[tool.ruff]
extend-exclude = ["endstone_python.pyi"]
line-length = 120
lint.extend-select = ["I"]

[tool.cibuildwheel]
skip = ["pp*"]
test-command = "pytest {package}/python/tests"
test-requires = "pytest"

[tool.cibuildwheel.linux]
manylinux-x86_64-image = "ghcr.io/endstonemc/manylinux_2_31_x86_64"
environment = { LLVM_VERSION = 15, CC = "/usr/bin/clang-${LLVM_VERSION}", CXX = "/usr/bin/clang++-${LLVM_VERSION}" }
before-all = [
    "apt-get update -y -q && apt-get install -y -q build-essential lsb-release wget software-properties-common gnupg",
    "wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh && ./llvm.sh ${LLVM_VERSION}",
    "apt-get install -y -q libc++-${LLVM_VERSION}-dev libc++abi-${LLVM_VERSION}-dev"
]
